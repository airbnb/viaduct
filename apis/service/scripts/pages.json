[{"name":"DISABLE_QUERY_PLAN_CACHE","description":"viaduct.service.api.spi.Flags.DISABLE_QUERY_PLAN_CACHE","location":"service/service-api/viaduct.service.api.spi/-flags/-d-i-s-a-b-l-e_-q-u-e-r-y_-p-l-a-n_-c-a-c-h-e/index.html","searchKeys":["DISABLE_QUERY_PLAN_CACHE","DISABLE_QUERY_PLAN_CACHE","viaduct.service.api.spi.Flags.DISABLE_QUERY_PLAN_CACHE"]},{"name":"EXECUTE_ACCESS_CHECKS_IN_MODERN_EXECUTION_STRATEGY","description":"viaduct.service.api.spi.Flags.EXECUTE_ACCESS_CHECKS_IN_MODERN_EXECUTION_STRATEGY","location":"service/service-api/viaduct.service.api.spi/-flags/-e-x-e-c-u-t-e_-a-c-c-e-s-s_-c-h-e-c-k-s_-i-n_-m-o-d-e-r-n_-e-x-e-c-u-t-i-o-n_-s-t-r-a-t-e-g-y/index.html","searchKeys":["EXECUTE_ACCESS_CHECKS_IN_MODERN_EXECUTION_STRATEGY","EXECUTE_ACCESS_CHECKS_IN_MODERN_EXECUTION_STRATEGY","viaduct.service.api.spi.Flags.EXECUTE_ACCESS_CHECKS_IN_MODERN_EXECUTION_STRATEGY"]},{"name":"abstract fun <T> getProvider(clazz: Class<T>): Provider<T>","description":"viaduct.service.api.spi.TenantCodeInjector.getProvider","location":"service/service-api/viaduct.service.api.spi/-tenant-code-injector/get-provider.html","searchKeys":["getProvider","abstract fun <T> getProvider(clazz: Class<T>): Provider<T>","viaduct.service.api.spi.TenantCodeInjector.getProvider"]},{"name":"abstract fun create(): TenantAPIBootstrapper","description":"viaduct.service.api.spi.TenantAPIBootstrapperBuilder.create","location":"service/service-api/viaduct.service.api.spi/-tenant-a-p-i-bootstrapper-builder/create.html","searchKeys":["create","abstract fun create(): TenantAPIBootstrapper","viaduct.service.api.spi.TenantAPIBootstrapperBuilder.create"]},{"name":"abstract fun exceptionToGraphQLError(throwable: Throwable, dataFetchingEnvironment: DataFetchingEnvironment, errorMetadata: ResolverErrorReporter.Companion.ErrorMetadata): List<GraphQLError>?","description":"viaduct.service.api.spi.ResolverErrorBuilder.exceptionToGraphQLError","location":"service/service-api/viaduct.service.api.spi/-resolver-error-builder/exception-to-graph-q-l-error.html","searchKeys":["exceptionToGraphQLError","abstract fun exceptionToGraphQLError(throwable: Throwable, dataFetchingEnvironment: DataFetchingEnvironment, errorMetadata: ResolverErrorReporter.Companion.ErrorMetadata): List<GraphQLError>?","viaduct.service.api.spi.ResolverErrorBuilder.exceptionToGraphQLError"]},{"name":"abstract fun execute(executionInput: ExecutionInput): ExecutionResult","description":"viaduct.service.api.Viaduct.execute","location":"service/service-api/viaduct.service.api/-viaduct/execute.html","searchKeys":["execute","abstract fun execute(executionInput: ExecutionInput): ExecutionResult","viaduct.service.api.Viaduct.execute"]},{"name":"abstract fun executeAsync(executionInput: ExecutionInput): CompletableFuture<ExecutionResult>","description":"viaduct.service.api.Viaduct.executeAsync","location":"service/service-api/viaduct.service.api/-viaduct/execute-async.html","searchKeys":["executeAsync","abstract fun executeAsync(executionInput: ExecutionInput): CompletableFuture<ExecutionResult>","viaduct.service.api.Viaduct.executeAsync"]},{"name":"abstract fun getAppliedScopes(schemaId: String): Set<String>?","description":"viaduct.service.api.Viaduct.getAppliedScopes","location":"service/service-api/viaduct.service.api/-viaduct/get-applied-scopes.html","searchKeys":["getAppliedScopes","abstract fun getAppliedScopes(schemaId: String): Set<String>?","viaduct.service.api.Viaduct.getAppliedScopes"]},{"name":"abstract fun getSchema(schemaId: String): ViaductSchema?","description":"viaduct.service.api.Viaduct.getSchema","location":"service/service-api/viaduct.service.api/-viaduct/get-schema.html","searchKeys":["getSchema","abstract fun getSchema(schemaId: String): ViaductSchema?","viaduct.service.api.Viaduct.getSchema"]},{"name":"abstract fun isEnabled(flag: Flag): Boolean","description":"viaduct.service.api.spi.FlagManager.isEnabled","location":"service/service-api/viaduct.service.api.spi/-flag-manager/is-enabled.html","searchKeys":["isEnabled","abstract fun isEnabled(flag: Flag): Boolean","viaduct.service.api.spi.FlagManager.isEnabled"]},{"name":"abstract fun reportError(exception: Throwable, fieldDefinition: GraphQLFieldDefinition, dataFetchingEnvironment: DataFetchingEnvironment, errorMessage: String, metadata: ResolverErrorReporter.Companion.ErrorMetadata)","description":"viaduct.service.api.spi.ResolverErrorReporter.reportError","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/report-error.html","searchKeys":["reportError","abstract fun reportError(exception: Throwable, fieldDefinition: GraphQLFieldDefinition, dataFetchingEnvironment: DataFetchingEnvironment, errorMessage: String, metadata: ResolverErrorReporter.Companion.ErrorMetadata)","viaduct.service.api.spi.ResolverErrorReporter.reportError"]},{"name":"abstract val flagName: String","description":"viaduct.service.api.spi.Flag.flagName","location":"service/service-api/viaduct.service.api.spi/-flag/flag-name.html","searchKeys":["flagName","abstract val flagName: String","viaduct.service.api.spi.Flag.flagName"]},{"name":"class NaiveTenantCodeInjector : TenantCodeInjector","description":"viaduct.service.api.spi.NaiveTenantCodeInjector","location":"service/service-api/viaduct.service.api.spi/-naive-tenant-code-injector/index.html","searchKeys":["NaiveTenantCodeInjector","class NaiveTenantCodeInjector : TenantCodeInjector","viaduct.service.api.spi.NaiveTenantCodeInjector"]},{"name":"constructor()","description":"viaduct.service.api.spi.NaiveTenantCodeInjector.NaiveTenantCodeInjector","location":"service/service-api/viaduct.service.api.spi/-naive-tenant-code-injector/-naive-tenant-code-injector.html","searchKeys":["NaiveTenantCodeInjector","constructor()","viaduct.service.api.spi.NaiveTenantCodeInjector.NaiveTenantCodeInjector"]},{"name":"constructor(fieldName: String? = null, parentType: String? = null, operationName: String? = null, isFrameworkError: Boolean? = null, resolvers: List<String>? = null, errorType: String? = null)","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.ErrorMetadata","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/-error-metadata.html","searchKeys":["ErrorMetadata","constructor(fieldName: String? = null, parentType: String? = null, operationName: String? = null, isFrameworkError: Boolean? = null, resolvers: List<String>? = null, errorType: String? = null)","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.ErrorMetadata"]},{"name":"constructor(query: String, schemaId: String, requestContext: Any, variables: Map<String, Any?> = emptyMap(), operationName: String? = null)","description":"viaduct.service.api.ExecutionInput.ExecutionInput","location":"service/service-api/viaduct.service.api/-execution-input/-execution-input.html","searchKeys":["ExecutionInput","constructor(query: String, schemaId: String, requestContext: Any, variables: Map<String, Any?> = emptyMap(), operationName: String? = null)","viaduct.service.api.ExecutionInput.ExecutionInput"]},{"name":"data class ErrorMetadata(val fieldName: String? = null, val parentType: String? = null, val operationName: String? = null, val isFrameworkError: Boolean? = null, val resolvers: List<String>? = null, val errorType: String? = null)","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/index.html","searchKeys":["ErrorMetadata","data class ErrorMetadata(val fieldName: String? = null, val parentType: String? = null, val operationName: String? = null, val isFrameworkError: Boolean? = null, val resolvers: List<String>? = null, val errorType: String? = null)","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata"]},{"name":"data class ExecutionInput(val query: String, val schemaId: String, val requestContext: Any, val variables: Map<String, Any?> = emptyMap(), val operationName: String? = null)","description":"viaduct.service.api.ExecutionInput","location":"service/service-api/viaduct.service.api/-execution-input/index.html","searchKeys":["ExecutionInput","data class ExecutionInput(val query: String, val schemaId: String, val requestContext: Any, val variables: Map<String, Any?> = emptyMap(), val operationName: String? = null)","viaduct.service.api.ExecutionInput"]},{"name":"enum Flags : Enum<Flags> , Flag","description":"viaduct.service.api.spi.Flags","location":"service/service-api/viaduct.service.api.spi/-flags/index.html","searchKeys":["Flags","enum Flags : Enum<Flags> , Flag","viaduct.service.api.spi.Flags"]},{"name":"fun interface ResolverErrorReporter","description":"viaduct.service.api.spi.ResolverErrorReporter","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/index.html","searchKeys":["ResolverErrorReporter","fun interface ResolverErrorReporter","viaduct.service.api.spi.ResolverErrorReporter"]},{"name":"fun toMap(): Map<String, String>","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.toMap","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/to-map.html","searchKeys":["toMap","fun toMap(): Map<String, String>","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.toMap"]},{"name":"fun valueOf(value: String): Flags","description":"viaduct.service.api.spi.Flags.valueOf","location":"service/service-api/viaduct.service.api.spi/-flags/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Flags","viaduct.service.api.spi.Flags.valueOf"]},{"name":"fun values(): Array<Flags>","description":"viaduct.service.api.spi.Flags.values","location":"service/service-api/viaduct.service.api.spi/-flags/values.html","searchKeys":["values","fun values(): Array<Flags>","viaduct.service.api.spi.Flags.values"]},{"name":"interface Flag","description":"viaduct.service.api.spi.Flag","location":"service/service-api/viaduct.service.api.spi/-flag/index.html","searchKeys":["Flag","interface Flag","viaduct.service.api.spi.Flag"]},{"name":"interface FlagManager","description":"viaduct.service.api.spi.FlagManager","location":"service/service-api/viaduct.service.api.spi/-flag-manager/index.html","searchKeys":["FlagManager","interface FlagManager","viaduct.service.api.spi.FlagManager"]},{"name":"interface ResolverErrorBuilder","description":"viaduct.service.api.spi.ResolverErrorBuilder","location":"service/service-api/viaduct.service.api.spi/-resolver-error-builder/index.html","searchKeys":["ResolverErrorBuilder","interface ResolverErrorBuilder","viaduct.service.api.spi.ResolverErrorBuilder"]},{"name":"interface TenantAPIBootstrapperBuilder","description":"viaduct.service.api.spi.TenantAPIBootstrapperBuilder","location":"service/service-api/viaduct.service.api.spi/-tenant-a-p-i-bootstrapper-builder/index.html","searchKeys":["TenantAPIBootstrapperBuilder","interface TenantAPIBootstrapperBuilder","viaduct.service.api.spi.TenantAPIBootstrapperBuilder"]},{"name":"interface TenantCodeInjector","description":"viaduct.service.api.spi.TenantCodeInjector","location":"service/service-api/viaduct.service.api.spi/-tenant-code-injector/index.html","searchKeys":["TenantCodeInjector","interface TenantCodeInjector","viaduct.service.api.spi.TenantCodeInjector"]},{"name":"interface Viaduct","description":"viaduct.service.api.Viaduct","location":"service/service-api/viaduct.service.api/-viaduct/index.html","searchKeys":["Viaduct","interface Viaduct","viaduct.service.api.Viaduct"]},{"name":"object Companion","description":"viaduct.service.api.spi.ResolverErrorBuilder.Companion","location":"service/service-api/viaduct.service.api.spi/-resolver-error-builder/-companion/index.html","searchKeys":["Companion","object Companion","viaduct.service.api.spi.ResolverErrorBuilder.Companion"]},{"name":"object Companion","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/index.html","searchKeys":["Companion","object Companion","viaduct.service.api.spi.ResolverErrorReporter.Companion"]},{"name":"object Companion","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.Companion","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/-companion/index.html","searchKeys":["Companion","object Companion","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.Companion"]},{"name":"object Companion","description":"viaduct.service.api.spi.TenantCodeInjector.Companion","location":"service/service-api/viaduct.service.api.spi/-tenant-code-injector/-companion/index.html","searchKeys":["Companion","object Companion","viaduct.service.api.spi.TenantCodeInjector.Companion"]},{"name":"object default : FlagManager","description":"viaduct.service.api.spi.FlagManager.default","location":"service/service-api/viaduct.service.api.spi/-flag-manager/default/index.html","searchKeys":["default","object default : FlagManager","viaduct.service.api.spi.FlagManager.default"]},{"name":"object disabled : FlagManager","description":"viaduct.service.api.spi.FlagManager.disabled","location":"service/service-api/viaduct.service.api.spi/-flag-manager/disabled/index.html","searchKeys":["disabled","object disabled : FlagManager","viaduct.service.api.spi.FlagManager.disabled"]},{"name":"open override fun <T> getProvider(clazz: Class<T>): Provider<T>","description":"viaduct.service.api.spi.NaiveTenantCodeInjector.getProvider","location":"service/service-api/viaduct.service.api.spi/-naive-tenant-code-injector/get-provider.html","searchKeys":["getProvider","open override fun <T> getProvider(clazz: Class<T>): Provider<T>","viaduct.service.api.spi.NaiveTenantCodeInjector.getProvider"]},{"name":"open override fun isEnabled(flag: Flag): Boolean","description":"viaduct.service.api.spi.FlagManager.default.isEnabled","location":"service/service-api/viaduct.service.api.spi/-flag-manager/default/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(flag: Flag): Boolean","viaduct.service.api.spi.FlagManager.default.isEnabled"]},{"name":"open override fun isEnabled(flag: Flag): Boolean","description":"viaduct.service.api.spi.FlagManager.disabled.isEnabled","location":"service/service-api/viaduct.service.api.spi/-flag-manager/disabled/is-enabled.html","searchKeys":["isEnabled","open override fun isEnabled(flag: Flag): Boolean","viaduct.service.api.spi.FlagManager.disabled.isEnabled"]},{"name":"open override fun toString(): String","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.toString","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/to-string.html","searchKeys":["toString","open override fun toString(): String","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.toString"]},{"name":"open override val flagName: String","description":"viaduct.service.api.spi.Flags.flagName","location":"service/service-api/viaduct.service.api.spi/-flags/flag-name.html","searchKeys":["flagName","open override val flagName: String","viaduct.service.api.spi.Flags.flagName"]},{"name":"val EMPTY: ResolverErrorReporter.Companion.ErrorMetadata","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.Companion.EMPTY","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/-companion/-e-m-p-t-y.html","searchKeys":["EMPTY","val EMPTY: ResolverErrorReporter.Companion.ErrorMetadata","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.Companion.EMPTY"]},{"name":"val Naive: TenantCodeInjector","description":"viaduct.service.api.spi.TenantCodeInjector.Companion.Naive","location":"service/service-api/viaduct.service.api.spi/-tenant-code-injector/-companion/-naive.html","searchKeys":["Naive","val Naive: TenantCodeInjector","viaduct.service.api.spi.TenantCodeInjector.Companion.Naive"]},{"name":"val NoOpResolverErrorBuilder: ResolverErrorBuilder","description":"viaduct.service.api.spi.ResolverErrorBuilder.Companion.NoOpResolverErrorBuilder","location":"service/service-api/viaduct.service.api.spi/-resolver-error-builder/-companion/-no-op-resolver-error-builder.html","searchKeys":["NoOpResolverErrorBuilder","val NoOpResolverErrorBuilder: ResolverErrorBuilder","viaduct.service.api.spi.ResolverErrorBuilder.Companion.NoOpResolverErrorBuilder"]},{"name":"val NoOpResolverErrorReporter: ResolverErrorReporter","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.NoOpResolverErrorReporter","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-no-op-resolver-error-reporter.html","searchKeys":["NoOpResolverErrorReporter","val NoOpResolverErrorReporter: ResolverErrorReporter","viaduct.service.api.spi.ResolverErrorReporter.Companion.NoOpResolverErrorReporter"]},{"name":"val constructorCache: ConcurrentHashMap<Class<*>, Constructor<*>>","description":"viaduct.service.api.spi.NaiveTenantCodeInjector.constructorCache","location":"service/service-api/viaduct.service.api.spi/-naive-tenant-code-injector/constructor-cache.html","searchKeys":["constructorCache","val constructorCache: ConcurrentHashMap<Class<*>, Constructor<*>>","viaduct.service.api.spi.NaiveTenantCodeInjector.constructorCache"]},{"name":"val entries: EnumEntries<Flags>","description":"viaduct.service.api.spi.Flags.entries","location":"service/service-api/viaduct.service.api.spi/-flags/entries.html","searchKeys":["entries","val entries: EnumEntries<Flags>","viaduct.service.api.spi.Flags.entries"]},{"name":"val errorType: String? = null","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.errorType","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/error-type.html","searchKeys":["errorType","val errorType: String? = null","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.errorType"]},{"name":"val fieldName: String? = null","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.fieldName","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/field-name.html","searchKeys":["fieldName","val fieldName: String? = null","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.fieldName"]},{"name":"val isFrameworkError: Boolean? = null","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.isFrameworkError","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/is-framework-error.html","searchKeys":["isFrameworkError","val isFrameworkError: Boolean? = null","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.isFrameworkError"]},{"name":"val operationName: String? = null","description":"viaduct.service.api.ExecutionInput.operationName","location":"service/service-api/viaduct.service.api/-execution-input/operation-name.html","searchKeys":["operationName","val operationName: String? = null","viaduct.service.api.ExecutionInput.operationName"]},{"name":"val operationName: String? = null","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.operationName","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/operation-name.html","searchKeys":["operationName","val operationName: String? = null","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.operationName"]},{"name":"val parentType: String? = null","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.parentType","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/parent-type.html","searchKeys":["parentType","val parentType: String? = null","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.parentType"]},{"name":"val query: String","description":"viaduct.service.api.ExecutionInput.query","location":"service/service-api/viaduct.service.api/-execution-input/query.html","searchKeys":["query","val query: String","viaduct.service.api.ExecutionInput.query"]},{"name":"val requestContext: Any","description":"viaduct.service.api.ExecutionInput.requestContext","location":"service/service-api/viaduct.service.api/-execution-input/request-context.html","searchKeys":["requestContext","val requestContext: Any","viaduct.service.api.ExecutionInput.requestContext"]},{"name":"val resolvers: List<String>? = null","description":"viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.resolvers","location":"service/service-api/viaduct.service.api.spi/-resolver-error-reporter/-companion/-error-metadata/resolvers.html","searchKeys":["resolvers","val resolvers: List<String>? = null","viaduct.service.api.spi.ResolverErrorReporter.Companion.ErrorMetadata.resolvers"]},{"name":"val schemaId: String","description":"viaduct.service.api.ExecutionInput.schemaId","location":"service/service-api/viaduct.service.api/-execution-input/schema-id.html","searchKeys":["schemaId","val schemaId: String","viaduct.service.api.ExecutionInput.schemaId"]},{"name":"val variables: Map<String, Any?>","description":"viaduct.service.api.ExecutionInput.variables","location":"service/service-api/viaduct.service.api/-execution-input/variables.html","searchKeys":["variables","val variables: Map<String, Any?>","viaduct.service.api.ExecutionInput.variables"]},{"name":"class ViaductBuilder","description":"viaduct.service.ViaductBuilder","location":"service/service-wiring/viaduct.service/-viaduct-builder/index.html","searchKeys":["ViaductBuilder","class ViaductBuilder","viaduct.service.ViaductBuilder"]},{"name":"constructor()","description":"viaduct.service.ViaductBuilder.ViaductBuilder","location":"service/service-wiring/viaduct.service/-viaduct-builder/-viaduct-builder.html","searchKeys":["ViaductBuilder","constructor()","viaduct.service.ViaductBuilder.ViaductBuilder"]},{"name":"constructor(schemaId: String = \"\", scopesToApply: Set<String>? = null)","description":"viaduct.service.SchemaScopeInfo.SchemaScopeInfo","location":"service/service-wiring/viaduct.service/-schema-scope-info/-schema-scope-info.html","searchKeys":["SchemaScopeInfo","constructor(schemaId: String = \"\", scopesToApply: Set<String>? = null)","viaduct.service.SchemaScopeInfo.SchemaScopeInfo"]},{"name":"constructor(scopes: List<SchemaScopeInfo> = listOf(SchemaScopeInfo()), packagePrefix: String? = null, resourcesIncluded: String? = null)","description":"viaduct.service.SchemaRegistrationInfo.SchemaRegistrationInfo","location":"service/service-wiring/viaduct.service/-schema-registration-info/-schema-registration-info.html","searchKeys":["SchemaRegistrationInfo","constructor(scopes: List<SchemaScopeInfo> = listOf(SchemaScopeInfo()), packagePrefix: String? = null, resourcesIncluded: String? = null)","viaduct.service.SchemaRegistrationInfo.SchemaRegistrationInfo"]},{"name":"constructor(tenantPackagePrefix: String, tenantCodeInjector: TenantCodeInjector = TenantCodeInjector.Naive)","description":"viaduct.service.TenantRegistrationInfo.TenantRegistrationInfo","location":"service/service-wiring/viaduct.service/-tenant-registration-info/-tenant-registration-info.html","searchKeys":["TenantRegistrationInfo","constructor(tenantPackagePrefix: String, tenantCodeInjector: TenantCodeInjector = TenantCodeInjector.Naive)","viaduct.service.TenantRegistrationInfo.TenantRegistrationInfo"]},{"name":"data class SchemaRegistrationInfo(val scopes: List<SchemaScopeInfo> = listOf(SchemaScopeInfo()), val packagePrefix: String? = null, val resourcesIncluded: String? = null)","description":"viaduct.service.SchemaRegistrationInfo","location":"service/service-wiring/viaduct.service/-schema-registration-info/index.html","searchKeys":["SchemaRegistrationInfo","data class SchemaRegistrationInfo(val scopes: List<SchemaScopeInfo> = listOf(SchemaScopeInfo()), val packagePrefix: String? = null, val resourcesIncluded: String? = null)","viaduct.service.SchemaRegistrationInfo"]},{"name":"data class SchemaScopeInfo(val schemaId: String = \"\", val scopesToApply: Set<String>? = null)","description":"viaduct.service.SchemaScopeInfo","location":"service/service-wiring/viaduct.service/-schema-scope-info/index.html","searchKeys":["SchemaScopeInfo","data class SchemaScopeInfo(val schemaId: String = \"\", val scopesToApply: Set<String>? = null)","viaduct.service.SchemaScopeInfo"]},{"name":"data class TenantRegistrationInfo(val tenantPackagePrefix: String, val tenantCodeInjector: TenantCodeInjector = TenantCodeInjector.Naive)","description":"viaduct.service.TenantRegistrationInfo","location":"service/service-wiring/viaduct.service/-tenant-registration-info/index.html","searchKeys":["TenantRegistrationInfo","data class TenantRegistrationInfo(val tenantPackagePrefix: String, val tenantCodeInjector: TenantCodeInjector = TenantCodeInjector.Naive)","viaduct.service.TenantRegistrationInfo"]},{"name":"fun build(): StandardViaduct","description":"viaduct.service.ViaductBuilder.build","location":"service/service-wiring/viaduct.service/-viaduct-builder/build.html","searchKeys":["build","fun build(): StandardViaduct","viaduct.service.ViaductBuilder.build"]},{"name":"fun create(schemaRegistrationInfo: SchemaRegistrationInfo = SchemaRegistrationInfo(), tenantRegistrationInfo: TenantRegistrationInfo): Viaduct","description":"viaduct.service.BasicViaductFactory.create","location":"service/service-wiring/viaduct.service/-basic-viaduct-factory/create.html","searchKeys":["create","fun create(schemaRegistrationInfo: SchemaRegistrationInfo = SchemaRegistrationInfo(), tenantRegistrationInfo: TenantRegistrationInfo): Viaduct","viaduct.service.BasicViaductFactory.create"]},{"name":"fun standardNodeBehavior(standardNodeBehavior: Boolean): ViaductBuilder","description":"viaduct.service.ViaductBuilder.standardNodeBehavior","location":"service/service-wiring/viaduct.service/-viaduct-builder/standard-node-behavior.html","searchKeys":["standardNodeBehavior","fun standardNodeBehavior(standardNodeBehavior: Boolean): ViaductBuilder","viaduct.service.ViaductBuilder.standardNodeBehavior"]},{"name":"fun withFlagManager(flagManager: FlagManager): ViaductBuilder","description":"viaduct.service.ViaductBuilder.withFlagManager","location":"service/service-wiring/viaduct.service/-viaduct-builder/with-flag-manager.html","searchKeys":["withFlagManager","fun withFlagManager(flagManager: FlagManager): ViaductBuilder","viaduct.service.ViaductBuilder.withFlagManager"]},{"name":"fun withNoTenantAPIBootstrapper(): ViaductBuilder","description":"viaduct.service.ViaductBuilder.withNoTenantAPIBootstrapper","location":"service/service-wiring/viaduct.service/-viaduct-builder/with-no-tenant-a-p-i-bootstrapper.html","searchKeys":["withNoTenantAPIBootstrapper","fun withNoTenantAPIBootstrapper(): ViaductBuilder","viaduct.service.ViaductBuilder.withNoTenantAPIBootstrapper"]},{"name":"fun withSchemaRegistryBuilder(viaductSchemaRegistryBuilder: ViaductSchemaRegistryBuilder): ViaductBuilder","description":"viaduct.service.ViaductBuilder.withSchemaRegistryBuilder","location":"service/service-wiring/viaduct.service/-viaduct-builder/with-schema-registry-builder.html","searchKeys":["withSchemaRegistryBuilder","fun withSchemaRegistryBuilder(viaductSchemaRegistryBuilder: ViaductSchemaRegistryBuilder): ViaductBuilder","viaduct.service.ViaductBuilder.withSchemaRegistryBuilder"]},{"name":"fun withTenantAPIBootstrapperBuilder(builder: TenantAPIBootstrapperBuilder): ViaductBuilder","description":"viaduct.service.ViaductBuilder.withTenantAPIBootstrapperBuilder","location":"service/service-wiring/viaduct.service/-viaduct-builder/with-tenant-a-p-i-bootstrapper-builder.html","searchKeys":["withTenantAPIBootstrapperBuilder","fun withTenantAPIBootstrapperBuilder(builder: TenantAPIBootstrapperBuilder): ViaductBuilder","viaduct.service.ViaductBuilder.withTenantAPIBootstrapperBuilder"]},{"name":"fun withTenantAPIBootstrapperBuilders(builders: List<TenantAPIBootstrapperBuilder>): ViaductBuilder","description":"viaduct.service.ViaductBuilder.withTenantAPIBootstrapperBuilders","location":"service/service-wiring/viaduct.service/-viaduct-builder/with-tenant-a-p-i-bootstrapper-builders.html","searchKeys":["withTenantAPIBootstrapperBuilders","fun withTenantAPIBootstrapperBuilders(builders: List<TenantAPIBootstrapperBuilder>): ViaductBuilder","viaduct.service.ViaductBuilder.withTenantAPIBootstrapperBuilders"]},{"name":"object BasicViaductFactory","description":"viaduct.service.BasicViaductFactory","location":"service/service-wiring/viaduct.service/-basic-viaduct-factory/index.html","searchKeys":["BasicViaductFactory","object BasicViaductFactory","viaduct.service.BasicViaductFactory"]},{"name":"val packagePrefix: String? = null","description":"viaduct.service.SchemaRegistrationInfo.packagePrefix","location":"service/service-wiring/viaduct.service/-schema-registration-info/package-prefix.html","searchKeys":["packagePrefix","val packagePrefix: String? = null","viaduct.service.SchemaRegistrationInfo.packagePrefix"]},{"name":"val resourcesIncluded: String? = null","description":"viaduct.service.SchemaRegistrationInfo.resourcesIncluded","location":"service/service-wiring/viaduct.service/-schema-registration-info/resources-included.html","searchKeys":["resourcesIncluded","val resourcesIncluded: String? = null","viaduct.service.SchemaRegistrationInfo.resourcesIncluded"]},{"name":"val schemaId: String","description":"viaduct.service.SchemaScopeInfo.schemaId","location":"service/service-wiring/viaduct.service/-schema-scope-info/schema-id.html","searchKeys":["schemaId","val schemaId: String","viaduct.service.SchemaScopeInfo.schemaId"]},{"name":"val scopes: List<SchemaScopeInfo>","description":"viaduct.service.SchemaRegistrationInfo.scopes","location":"service/service-wiring/viaduct.service/-schema-registration-info/scopes.html","searchKeys":["scopes","val scopes: List<SchemaScopeInfo>","viaduct.service.SchemaRegistrationInfo.scopes"]},{"name":"val scopesToApply: Set<String>? = null","description":"viaduct.service.SchemaScopeInfo.scopesToApply","location":"service/service-wiring/viaduct.service/-schema-scope-info/scopes-to-apply.html","searchKeys":["scopesToApply","val scopesToApply: Set<String>? = null","viaduct.service.SchemaScopeInfo.scopesToApply"]},{"name":"val tenantCodeInjector: TenantCodeInjector","description":"viaduct.service.TenantRegistrationInfo.tenantCodeInjector","location":"service/service-wiring/viaduct.service/-tenant-registration-info/tenant-code-injector.html","searchKeys":["tenantCodeInjector","val tenantCodeInjector: TenantCodeInjector","viaduct.service.TenantRegistrationInfo.tenantCodeInjector"]},{"name":"val tenantPackagePrefix: String","description":"viaduct.service.TenantRegistrationInfo.tenantPackagePrefix","location":"service/service-wiring/viaduct.service/-tenant-registration-info/tenant-package-prefix.html","searchKeys":["tenantPackagePrefix","val tenantPackagePrefix: String","viaduct.service.TenantRegistrationInfo.tenantPackagePrefix"]}]