[{"name":"abstract fun <T : CompositeOutput> selectionsFor(type: Type<T>, selections: String, variables: Map<String, Any?> = emptyMap()): SelectionSet<T>","description":"viaduct.api.context.ResolverExecutionContext.selectionsFor","location":"tenant-api/viaduct.api.context/-resolver-execution-context/selections-for.html","searchKeys":["selectionsFor","abstract fun <T : CompositeOutput> selectionsFor(type: Type<T>, selections: String, variables: Map<String, Any?> = emptyMap()): SelectionSet<T>","viaduct.api.context.ResolverExecutionContext.selectionsFor"]},{"name":"abstract fun <T : NodeCompositeOutput> deserialize(str: String): GlobalID<T>","description":"viaduct.api.globalid.GlobalIDCodec.deserialize","location":"tenant-api/viaduct.api.globalid/-global-i-d-codec/deserialize.html","searchKeys":["deserialize","abstract fun <T : NodeCompositeOutput> deserialize(str: String): GlobalID<T>","viaduct.api.globalid.GlobalIDCodec.deserialize"]},{"name":"abstract fun <T : NodeCompositeOutput> serialize(id: GlobalID<T>): String","description":"viaduct.api.globalid.GlobalIDCodec.serialize","location":"tenant-api/viaduct.api.globalid/-global-i-d-codec/serialize.html","searchKeys":["serialize","abstract fun <T : NodeCompositeOutput> serialize(id: GlobalID<T>): String","viaduct.api.globalid.GlobalIDCodec.serialize"]},{"name":"abstract fun <T : NodeObject> globalIDFor(type: Type<T>, internalID: String): GlobalID<T>","description":"viaduct.api.context.ExecutionContext.globalIDFor","location":"tenant-api/viaduct.api.context/-execution-context/global-i-d-for.html","searchKeys":["globalIDFor","abstract fun <T : NodeObject> globalIDFor(type: Type<T>, internalID: String): GlobalID<T>","viaduct.api.context.ExecutionContext.globalIDFor"]},{"name":"abstract fun <T : NodeObject> globalIDStringFor(type: Type<T>, internalID: String): String","description":"viaduct.api.context.ResolverExecutionContext.globalIDStringFor","location":"tenant-api/viaduct.api.context/-resolver-execution-context/global-i-d-string-for.html","searchKeys":["globalIDStringFor","abstract fun <T : NodeObject> globalIDStringFor(type: Type<T>, internalID: String): String","viaduct.api.context.ResolverExecutionContext.globalIDStringFor"]},{"name":"abstract fun <T : NodeObject> nodeFor(id: GlobalID<T>): T","description":"viaduct.api.context.ResolverExecutionContext.nodeFor","location":"tenant-api/viaduct.api.context/-resolver-execution-context/node-for.html","searchKeys":["nodeFor","abstract fun <T : NodeObject> nodeFor(id: GlobalID<T>): T","viaduct.api.context.ResolverExecutionContext.nodeFor"]},{"name":"abstract fun <U : T, R : CompositeOutput> selectionSetFor(field: CompositeField<U, R>): SelectionSet<R>","description":"viaduct.api.select.SelectionSet.selectionSetFor","location":"tenant-api/viaduct.api.select/-selection-set/selection-set-for.html","searchKeys":["selectionSetFor","abstract fun <U : T, R : CompositeOutput> selectionSetFor(field: CompositeField<U, R>): SelectionSet<R>","viaduct.api.select.SelectionSet.selectionSetFor"]},{"name":"abstract fun <U : T> contains(field: Field<U>): Boolean","description":"viaduct.api.select.SelectionSet.contains","location":"tenant-api/viaduct.api.select/-selection-set/contains.html","searchKeys":["contains","abstract fun <U : T> contains(field: Field<U>): Boolean","viaduct.api.select.SelectionSet.contains"]},{"name":"abstract fun <U : T> requestsType(type: Type<U>): Boolean","description":"viaduct.api.select.SelectionSet.requestsType","location":"tenant-api/viaduct.api.select/-selection-set/requests-type.html","searchKeys":["requestsType","abstract fun <U : T> requestsType(type: Type<U>): Boolean","viaduct.api.select.SelectionSet.requestsType"]},{"name":"abstract fun <U : T> selectionSetFor(type: Type<U>): SelectionSet<U>","description":"viaduct.api.select.SelectionSet.selectionSetFor","location":"tenant-api/viaduct.api.select/-selection-set/selection-set-for.html","searchKeys":["selectionSetFor","abstract fun <U : T> selectionSetFor(type: Type<U>): SelectionSet<U>","viaduct.api.select.SelectionSet.selectionSetFor"]},{"name":"abstract fun <V : Object> convert(from: D?, graphqlObjectType: GraphQLObjectType): V?","description":"viaduct.api.ValueMapper.convert","location":"tenant-api/viaduct.api/-value-mapper/convert.html","searchKeys":["convert","abstract fun <V : Object> convert(from: D?, graphqlObjectType: GraphQLObjectType): V?","viaduct.api.ValueMapper.convert"]},{"name":"abstract fun build(): T","description":"viaduct.api.DynamicOutputValueBuilder.build","location":"tenant-api/viaduct.api/-dynamic-output-value-builder/build.html","searchKeys":["build","abstract fun build(): T","viaduct.api.DynamicOutputValueBuilder.build"]},{"name":"abstract fun get(): T","description":"viaduct.api.FieldValue.get","location":"tenant-api/viaduct.api/-field-value/get.html","searchKeys":["get","abstract fun get(): T","viaduct.api.FieldValue.get"]},{"name":"abstract fun isEmpty(): Boolean","description":"viaduct.api.select.SelectionSet.isEmpty","location":"tenant-api/viaduct.api.select/-selection-set/is-empty.html","searchKeys":["isEmpty","abstract fun isEmpty(): Boolean","viaduct.api.select.SelectionSet.isEmpty"]},{"name":"abstract fun put(name: String, value: Any?): DynamicOutputValueBuilder<T>","description":"viaduct.api.DynamicOutputValueBuilder.put","location":"tenant-api/viaduct.api/-dynamic-output-value-builder/put.html","searchKeys":["put","abstract fun put(name: String, value: Any?): DynamicOutputValueBuilder<T>","viaduct.api.DynamicOutputValueBuilder.put"]},{"name":"abstract fun selections(): SelectionSet<O>","description":"viaduct.api.context.FieldExecutionContext.selections","location":"tenant-api/viaduct.api.context/-field-execution-context/selections.html","searchKeys":["selections","abstract fun selections(): SelectionSet<O>","viaduct.api.context.FieldExecutionContext.selections"]},{"name":"abstract fun selections(): SelectionSet<T>","description":"viaduct.api.context.NodeExecutionContext.selections","location":"tenant-api/viaduct.api.context/-node-execution-context/selections.html","searchKeys":["selections","abstract fun selections(): SelectionSet<T>","viaduct.api.context.NodeExecutionContext.selections"]},{"name":"abstract suspend fun <T : Mutation> mutation(selections: SelectionSet<T>): T","description":"viaduct.api.context.MutationFieldExecutionContext.mutation","location":"tenant-api/viaduct.api.context/-mutation-field-execution-context/mutation.html","searchKeys":["mutation","abstract suspend fun <T : Mutation> mutation(selections: SelectionSet<T>): T","viaduct.api.context.MutationFieldExecutionContext.mutation"]},{"name":"abstract suspend fun <T : Query> query(selections: SelectionSet<T>): T","description":"viaduct.api.context.ResolverExecutionContext.query","location":"tenant-api/viaduct.api.context/-resolver-execution-context/query.html","searchKeys":["query","abstract suspend fun <T : Query> query(selections: SelectionSet<T>): T","viaduct.api.context.ResolverExecutionContext.query"]},{"name":"abstract suspend fun provide(context: VariablesProviderContext<T>): Map<String, Any?>","description":"viaduct.api.VariablesProvider.provide","location":"tenant-api/viaduct.api/-variables-provider/provide.html","searchKeys":["provide","abstract suspend fun provide(context: VariablesProviderContext<T>): Map<String, Any?>","viaduct.api.VariablesProvider.provide"]},{"name":"abstract val args: T","description":"viaduct.api.context.VariablesProviderContext.args","location":"tenant-api/viaduct.api.context/-variables-provider-context/args.html","searchKeys":["args","abstract val args: T","viaduct.api.context.VariablesProviderContext.args"]},{"name":"abstract val arguments: A","description":"viaduct.api.context.FieldExecutionContext.arguments","location":"tenant-api/viaduct.api.context/-field-execution-context/arguments.html","searchKeys":["arguments","abstract val arguments: A","viaduct.api.context.FieldExecutionContext.arguments"]},{"name":"abstract val containingType: Type<Parent>","description":"viaduct.api.reflect.Field.containingType","location":"tenant-api/viaduct.api.reflect/-field/containing-type.html","searchKeys":["containingType","abstract val containingType: Type<Parent>","viaduct.api.reflect.Field.containingType"]},{"name":"abstract val id: GlobalID<T>","description":"viaduct.api.context.NodeExecutionContext.id","location":"tenant-api/viaduct.api.context/-node-execution-context/id.html","searchKeys":["id","abstract val id: GlobalID<T>","viaduct.api.context.NodeExecutionContext.id"]},{"name":"abstract val internalID: String","description":"viaduct.api.globalid.GlobalID.internalID","location":"tenant-api/viaduct.api.globalid/-global-i-d/internal-i-d.html","searchKeys":["internalID","abstract val internalID: String","viaduct.api.globalid.GlobalID.internalID"]},{"name":"abstract val isError: Boolean","description":"viaduct.api.FieldValue.isError","location":"tenant-api/viaduct.api/-field-value/is-error.html","searchKeys":["isError","abstract val isError: Boolean","viaduct.api.FieldValue.isError"]},{"name":"abstract val kcls: KClass<out T>","description":"viaduct.api.reflect.Type.kcls","location":"tenant-api/viaduct.api.reflect/-type/kcls.html","searchKeys":["kcls","abstract val kcls: KClass<out T>","viaduct.api.reflect.Type.kcls"]},{"name":"abstract val metadata: Map<String, String>","description":"viaduct.api.TenantModule.metadata","location":"tenant-api/viaduct.api/-tenant-module/metadata.html","searchKeys":["metadata","abstract val metadata: Map<String, String>","viaduct.api.TenantModule.metadata"]},{"name":"abstract val name: String","description":"viaduct.api.reflect.Field.name","location":"tenant-api/viaduct.api.reflect/-field/name.html","searchKeys":["name","abstract val name: String","viaduct.api.reflect.Field.name"]},{"name":"abstract val name: String","description":"viaduct.api.reflect.Type.name","location":"tenant-api/viaduct.api.reflect/-type/name.html","searchKeys":["name","abstract val name: String","viaduct.api.reflect.Type.name"]},{"name":"abstract val objectValue: T","description":"viaduct.api.context.FieldExecutionContext.objectValue","location":"tenant-api/viaduct.api.context/-field-execution-context/object-value.html","searchKeys":["objectValue","abstract val objectValue: T","viaduct.api.context.FieldExecutionContext.objectValue"]},{"name":"abstract val queryValue: Q","description":"viaduct.api.context.FieldExecutionContext.queryValue","location":"tenant-api/viaduct.api.context/-field-execution-context/query-value.html","searchKeys":["queryValue","abstract val queryValue: Q","viaduct.api.context.FieldExecutionContext.queryValue"]},{"name":"abstract val type: Type<T>","description":"viaduct.api.globalid.GlobalID.type","location":"tenant-api/viaduct.api.globalid/-global-i-d/type.html","searchKeys":["type","abstract val type: Type<T>","viaduct.api.globalid.GlobalID.type"]},{"name":"abstract val type: Type<T>","description":"viaduct.api.select.SelectionSet.type","location":"tenant-api/viaduct.api.select/-selection-set/type.html","searchKeys":["type","abstract val type: Type<T>","viaduct.api.select.SelectionSet.type"]},{"name":"abstract val type: Type<UnwrappedType>","description":"viaduct.api.reflect.CompositeField.type","location":"tenant-api/viaduct.api.reflect/-composite-field/type.html","searchKeys":["type","abstract val type: Type<UnwrappedType>","viaduct.api.reflect.CompositeField.type"]},{"name":"annotation class Resolver(val objectValueFragment: String = \"\", val queryValueFragment: String = \"\", val variables: Array<Variable> = [])","description":"viaduct.api.Resolver","location":"tenant-api/viaduct.api/-resolver/index.html","searchKeys":["Resolver","annotation class Resolver(val objectValueFragment: String = \"\", val queryValueFragment: String = \"\", val variables: Array<Variable> = [])","viaduct.api.Resolver"]},{"name":"annotation class Selections","description":"viaduct.api.select.Selections","location":"tenant-api/viaduct.api.select/-selections/index.html","searchKeys":["Selections","annotation class Selections","viaduct.api.select.Selections"]},{"name":"annotation class Variable(val name: String, val fromObjectField: String = UNSET_STRING_VALUE, val fromQueryField: String = UNSET_STRING_VALUE, val fromArgument: String = UNSET_STRING_VALUE)","description":"viaduct.api.Variable","location":"tenant-api/viaduct.api/-variable/index.html","searchKeys":["Variable","annotation class Variable(val name: String, val fromObjectField: String = UNSET_STRING_VALUE, val fromQueryField: String = UNSET_STRING_VALUE, val fromArgument: String = UNSET_STRING_VALUE)","viaduct.api.Variable"]},{"name":"annotation class Variables(val types: String)","description":"viaduct.api.Variables","location":"tenant-api/viaduct.api/-variables/index.html","searchKeys":["Variables","annotation class Variables(val types: String)","viaduct.api.Variables"]},{"name":"class ValueMapperException(message: String) : Exception","description":"viaduct.api.exception.ValueMapperException","location":"tenant-api/viaduct.api.exception/-value-mapper-exception/index.html","searchKeys":["ValueMapperException","class ValueMapperException(message: String) : Exception","viaduct.api.exception.ValueMapperException"]},{"name":"class ViaductFrameworkException : Exception","description":"viaduct.api.ViaductFrameworkException","location":"tenant-api/viaduct.api/-viaduct-framework-exception/index.html","searchKeys":["ViaductFrameworkException","class ViaductFrameworkException : Exception","viaduct.api.ViaductFrameworkException"]},{"name":"class ViaductTenantResolverException(val cause: Throwable, val resolver: String) : Exception, ViaductTenantException","description":"viaduct.api.ViaductTenantResolverException","location":"tenant-api/viaduct.api/-viaduct-tenant-resolver-exception/index.html","searchKeys":["ViaductTenantResolverException","class ViaductTenantResolverException(val cause: Throwable, val resolver: String) : Exception, ViaductTenantException","viaduct.api.ViaductTenantResolverException"]},{"name":"class ViaductTenantUsageException(message: String, cause: Throwable? = null) : Exception, ViaductTenantException","description":"viaduct.api.ViaductTenantUsageException","location":"tenant-api/viaduct.api/-viaduct-tenant-usage-exception/index.html","searchKeys":["ViaductTenantUsageException","class ViaductTenantUsageException(message: String, cause: Throwable? = null) : Exception, ViaductTenantException","viaduct.api.ViaductTenantUsageException"]},{"name":"const val UNSET_STRING_VALUE: String","description":"viaduct.api.Variable.Companion.UNSET_STRING_VALUE","location":"tenant-api/viaduct.api/-variable/-companion/-u-n-s-e-t_-s-t-r-i-n-g_-v-a-l-u-e.html","searchKeys":["UNSET_STRING_VALUE","const val UNSET_STRING_VALUE: String","viaduct.api.Variable.Companion.UNSET_STRING_VALUE"]},{"name":"constructor(cause: Throwable, resolver: String)","description":"viaduct.api.ViaductTenantResolverException.ViaductTenantResolverException","location":"tenant-api/viaduct.api/-viaduct-tenant-resolver-exception/-viaduct-tenant-resolver-exception.html","searchKeys":["ViaductTenantResolverException","constructor(cause: Throwable, resolver: String)","viaduct.api.ViaductTenantResolverException.ViaductTenantResolverException"]},{"name":"constructor(message: String)","description":"viaduct.api.exception.ValueMapperException.ValueMapperException","location":"tenant-api/viaduct.api.exception/-value-mapper-exception/-value-mapper-exception.html","searchKeys":["ValueMapperException","constructor(message: String)","viaduct.api.exception.ValueMapperException.ValueMapperException"]},{"name":"constructor(message: String, cause: Throwable? = null)","description":"viaduct.api.ViaductTenantUsageException.ViaductTenantUsageException","location":"tenant-api/viaduct.api/-viaduct-tenant-usage-exception/-viaduct-tenant-usage-exception.html","searchKeys":["ViaductTenantUsageException","constructor(message: String, cause: Throwable? = null)","viaduct.api.ViaductTenantUsageException.ViaductTenantUsageException"]},{"name":"constructor(message: String, extensions: Map<String, Any>? = null, cause: Throwable? = null)","description":"viaduct.api.exception.FieldError.FieldError","location":"tenant-api/viaduct.api.exception/-field-error/-field-error.html","searchKeys":["FieldError","constructor(message: String, extensions: Map<String, Any>? = null, cause: Throwable? = null)","viaduct.api.exception.FieldError.FieldError"]},{"name":"fun <T : CompositeOutput> empty(type: Type<T>): SelectionSet<T>","description":"viaduct.api.select.SelectionSet.Companion.empty","location":"tenant-api/viaduct.api.select/-selection-set/-companion/empty.html","searchKeys":["empty","fun <T : CompositeOutput> empty(type: Type<T>): SelectionSet<T>","viaduct.api.select.SelectionSet.Companion.empty"]},{"name":"fun <T : Enum<T>, Enum> enumFrom(clazz: KClass<T>, value: String): T","description":"viaduct.api.types.Enum.Companion.enumFrom","location":"tenant-api/viaduct.api.types/-enum/-companion/enum-from.html","searchKeys":["enumFrom","fun <T : Enum<T>, Enum> enumFrom(clazz: KClass<T>, value: String): T","viaduct.api.types.Enum.Companion.enumFrom"]},{"name":"fun <T : GRT> ofClass(cls: KClass<T>): Type<T>","description":"viaduct.api.reflect.Type.Companion.ofClass","location":"tenant-api/viaduct.api.reflect/-type/-companion/of-class.html","searchKeys":["ofClass","fun <T : GRT> ofClass(cls: KClass<T>): Type<T>","viaduct.api.reflect.Type.Companion.ofClass"]},{"name":"fun <T> ofValue(value: T): FieldValue<T>","description":"viaduct.api.FieldValue.Companion.ofValue","location":"tenant-api/viaduct.api/-field-value/-companion/of-value.html","searchKeys":["ofValue","fun <T> ofValue(value: T): FieldValue<T>","viaduct.api.FieldValue.Companion.ofValue"]},{"name":"fun inputType(name: String, schema: ViaductSchema): GraphQLInputObjectType","description":"viaduct.api.types.Arguments.Companion.inputType","location":"tenant-api/viaduct.api.types/-arguments/-companion/input-type.html","searchKeys":["inputType","fun inputType(name: String, schema: ViaductSchema): GraphQLInputObjectType","viaduct.api.types.Arguments.Companion.inputType"]},{"name":"fun inputType(name: String, schema: ViaductSchema): GraphQLInputObjectType","description":"viaduct.api.types.Input.Companion.inputType","location":"tenant-api/viaduct.api.types/-input/-companion/input-type.html","searchKeys":["inputType","fun inputType(name: String, schema: ViaductSchema): GraphQLInputObjectType","viaduct.api.types.Input.Companion.inputType"]},{"name":"fun interface VariablesProvider<T : Arguments>","description":"viaduct.api.VariablesProvider","location":"tenant-api/viaduct.api/-variables-provider/index.html","searchKeys":["VariablesProvider","fun interface VariablesProvider<T : Arguments>","viaduct.api.VariablesProvider"]},{"name":"fun ofError(error: Exception): FieldValue<Nothing>","description":"viaduct.api.FieldValue.Companion.ofError","location":"tenant-api/viaduct.api/-field-value/-companion/of-error.html","searchKeys":["ofError","fun ofError(error: Exception): FieldValue<Nothing>","viaduct.api.FieldValue.Companion.ofError"]},{"name":"interface Arguments : InputLike","description":"viaduct.api.types.Arguments","location":"tenant-api/viaduct.api.types/-arguments/index.html","searchKeys":["Arguments","interface Arguments : InputLike","viaduct.api.types.Arguments"]},{"name":"interface CompositeField<Parent : GRT, UnwrappedType : GRT> : Field<Parent> ","description":"viaduct.api.reflect.CompositeField","location":"tenant-api/viaduct.api.reflect/-composite-field/index.html","searchKeys":["CompositeField","interface CompositeField<Parent : GRT, UnwrappedType : GRT> : Field<Parent> ","viaduct.api.reflect.CompositeField"]},{"name":"interface CompositeOutput : GRT","description":"viaduct.api.types.CompositeOutput","location":"tenant-api/viaduct.api.types/-composite-output/index.html","searchKeys":["CompositeOutput","interface CompositeOutput : GRT","viaduct.api.types.CompositeOutput"]},{"name":"interface DynamicOutputValueBuilder<T>","description":"viaduct.api.DynamicOutputValueBuilder","location":"tenant-api/viaduct.api/-dynamic-output-value-builder/index.html","searchKeys":["DynamicOutputValueBuilder","interface DynamicOutputValueBuilder<T>","viaduct.api.DynamicOutputValueBuilder"]},{"name":"interface Enum : GRT","description":"viaduct.api.types.Enum","location":"tenant-api/viaduct.api.types/-enum/index.html","searchKeys":["Enum","interface Enum : GRT","viaduct.api.types.Enum"]},{"name":"interface ExecutionContext","description":"viaduct.api.context.ExecutionContext","location":"tenant-api/viaduct.api.context/-execution-context/index.html","searchKeys":["ExecutionContext","interface ExecutionContext","viaduct.api.context.ExecutionContext"]},{"name":"interface Field<Parent : GRT>","description":"viaduct.api.reflect.Field","location":"tenant-api/viaduct.api.reflect/-field/index.html","searchKeys":["Field","interface Field<Parent : GRT>","viaduct.api.reflect.Field"]},{"name":"interface FieldExecutionContext<T : Object, Q : Query, A : Arguments, O : CompositeOutput> : ResolverExecutionContext","description":"viaduct.api.context.FieldExecutionContext","location":"tenant-api/viaduct.api.context/-field-execution-context/index.html","searchKeys":["FieldExecutionContext","interface FieldExecutionContext<T : Object, Q : Query, A : Arguments, O : CompositeOutput> : ResolverExecutionContext","viaduct.api.context.FieldExecutionContext"]},{"name":"interface GRT","description":"viaduct.api.types.GRT","location":"tenant-api/viaduct.api.types/-g-r-t/index.html","searchKeys":["GRT","interface GRT","viaduct.api.types.GRT"]},{"name":"interface GlobalID<T : NodeCompositeOutput>","description":"viaduct.api.globalid.GlobalID","location":"tenant-api/viaduct.api.globalid/-global-i-d/index.html","searchKeys":["GlobalID","interface GlobalID<T : NodeCompositeOutput>","viaduct.api.globalid.GlobalID"]},{"name":"interface GlobalIDCodec","description":"viaduct.api.globalid.GlobalIDCodec","location":"tenant-api/viaduct.api.globalid/-global-i-d-codec/index.html","searchKeys":["GlobalIDCodec","interface GlobalIDCodec","viaduct.api.globalid.GlobalIDCodec"]},{"name":"interface Input : InputLike","description":"viaduct.api.types.Input","location":"tenant-api/viaduct.api.types/-input/index.html","searchKeys":["Input","interface Input : InputLike","viaduct.api.types.Input"]},{"name":"interface InputLike : Struct","description":"viaduct.api.types.InputLike","location":"tenant-api/viaduct.api.types/-input-like/index.html","searchKeys":["InputLike","interface InputLike : Struct","viaduct.api.types.InputLike"]},{"name":"interface Interface : RecordOutput","description":"viaduct.api.types.Interface","location":"tenant-api/viaduct.api.types/-interface/index.html","searchKeys":["Interface","interface Interface : RecordOutput","viaduct.api.types.Interface"]},{"name":"interface Mutation : Object","description":"viaduct.api.types.Mutation","location":"tenant-api/viaduct.api.types/-mutation/index.html","searchKeys":["Mutation","interface Mutation : Object","viaduct.api.types.Mutation"]},{"name":"interface MutationFieldExecutionContext<T : Object, Q : Query, A : Arguments, O : CompositeOutput> : FieldExecutionContext<T, Q, A, O> ","description":"viaduct.api.context.MutationFieldExecutionContext","location":"tenant-api/viaduct.api.context/-mutation-field-execution-context/index.html","searchKeys":["MutationFieldExecutionContext","interface MutationFieldExecutionContext<T : Object, Q : Query, A : Arguments, O : CompositeOutput> : FieldExecutionContext<T, Q, A, O> ","viaduct.api.context.MutationFieldExecutionContext"]},{"name":"interface NodeCompositeOutput : CompositeOutput","description":"viaduct.api.types.NodeCompositeOutput","location":"tenant-api/viaduct.api.types/-node-composite-output/index.html","searchKeys":["NodeCompositeOutput","interface NodeCompositeOutput : CompositeOutput","viaduct.api.types.NodeCompositeOutput"]},{"name":"interface NodeExecutionContext<T : NodeObject> : ResolverExecutionContext","description":"viaduct.api.context.NodeExecutionContext","location":"tenant-api/viaduct.api.context/-node-execution-context/index.html","searchKeys":["NodeExecutionContext","interface NodeExecutionContext<T : NodeObject> : ResolverExecutionContext","viaduct.api.context.NodeExecutionContext"]},{"name":"interface NodeObject : Object, NodeCompositeOutput","description":"viaduct.api.types.NodeObject","location":"tenant-api/viaduct.api.types/-node-object/index.html","searchKeys":["NodeObject","interface NodeObject : Object, NodeCompositeOutput","viaduct.api.types.NodeObject"]},{"name":"interface Object : Struct, RecordOutput","description":"viaduct.api.types.Object","location":"tenant-api/viaduct.api.types/-object/index.html","searchKeys":["Object","interface Object : Struct, RecordOutput","viaduct.api.types.Object"]},{"name":"interface Query : Object","description":"viaduct.api.types.Query","location":"tenant-api/viaduct.api.types/-query/index.html","searchKeys":["Query","interface Query : Object","viaduct.api.types.Query"]},{"name":"interface RecordOutput : CompositeOutput","description":"viaduct.api.types.RecordOutput","location":"tenant-api/viaduct.api.types/-record-output/index.html","searchKeys":["RecordOutput","interface RecordOutput : CompositeOutput","viaduct.api.types.RecordOutput"]},{"name":"interface ResolverExecutionContext : ExecutionContext","description":"viaduct.api.context.ResolverExecutionContext","location":"tenant-api/viaduct.api.context/-resolver-execution-context/index.html","searchKeys":["ResolverExecutionContext","interface ResolverExecutionContext : ExecutionContext","viaduct.api.context.ResolverExecutionContext"]},{"name":"interface SelectionSet<T : CompositeOutput>","description":"viaduct.api.select.SelectionSet","location":"tenant-api/viaduct.api.select/-selection-set/index.html","searchKeys":["SelectionSet","interface SelectionSet<T : CompositeOutput>","viaduct.api.select.SelectionSet"]},{"name":"interface Struct : GRT","description":"viaduct.api.types.Struct","location":"tenant-api/viaduct.api.types/-struct/index.html","searchKeys":["Struct","interface Struct : GRT","viaduct.api.types.Struct"]},{"name":"interface TenantModule","description":"viaduct.api.TenantModule","location":"tenant-api/viaduct.api/-tenant-module/index.html","searchKeys":["TenantModule","interface TenantModule","viaduct.api.TenantModule"]},{"name":"interface Type<out T : GRT>","description":"viaduct.api.reflect.Type","location":"tenant-api/viaduct.api.reflect/-type/index.html","searchKeys":["Type","interface Type<out T : GRT>","viaduct.api.reflect.Type"]},{"name":"interface Union : CompositeOutput","description":"viaduct.api.types.Union","location":"tenant-api/viaduct.api.types/-union/index.html","searchKeys":["Union","interface Union : CompositeOutput","viaduct.api.types.Union"]},{"name":"interface ValueMapper<D : Any>","description":"viaduct.api.ValueMapper","location":"tenant-api/viaduct.api/-value-mapper/index.html","searchKeys":["ValueMapper","interface ValueMapper<D : Any>","viaduct.api.ValueMapper"]},{"name":"interface VariablesProviderContext<T : Arguments> : ExecutionContext","description":"viaduct.api.context.VariablesProviderContext","location":"tenant-api/viaduct.api.context/-variables-provider-context/index.html","searchKeys":["VariablesProviderContext","interface VariablesProviderContext<T : Arguments> : ExecutionContext","viaduct.api.context.VariablesProviderContext"]},{"name":"interface ViaductTenantException","description":"viaduct.api.ViaductTenantException","location":"tenant-api/viaduct.api/-viaduct-tenant-exception/index.html","searchKeys":["ViaductTenantException","interface ViaductTenantException","viaduct.api.ViaductTenantException"]},{"name":"object Companion","description":"viaduct.api.FieldValue.Companion","location":"tenant-api/viaduct.api/-field-value/-companion/index.html","searchKeys":["Companion","object Companion","viaduct.api.FieldValue.Companion"]},{"name":"object Companion","description":"viaduct.api.Variable.Companion","location":"tenant-api/viaduct.api/-variable/-companion/index.html","searchKeys":["Companion","object Companion","viaduct.api.Variable.Companion"]},{"name":"object Companion","description":"viaduct.api.reflect.Type.Companion","location":"tenant-api/viaduct.api.reflect/-type/-companion/index.html","searchKeys":["Companion","object Companion","viaduct.api.reflect.Type.Companion"]},{"name":"object Companion","description":"viaduct.api.select.SelectionSet.Companion","location":"tenant-api/viaduct.api.select/-selection-set/-companion/index.html","searchKeys":["Companion","object Companion","viaduct.api.select.SelectionSet.Companion"]},{"name":"object Companion","description":"viaduct.api.types.Arguments.Companion","location":"tenant-api/viaduct.api.types/-arguments/-companion/index.html","searchKeys":["Companion","object Companion","viaduct.api.types.Arguments.Companion"]},{"name":"object Companion","description":"viaduct.api.types.Enum.Companion","location":"tenant-api/viaduct.api.types/-enum/-companion/index.html","searchKeys":["Companion","object Companion","viaduct.api.types.Enum.Companion"]},{"name":"object Companion","description":"viaduct.api.types.Input.Companion","location":"tenant-api/viaduct.api.types/-input/-companion/index.html","searchKeys":["Companion","object Companion","viaduct.api.types.Input.Companion"]},{"name":"object NoArguments : Arguments","description":"viaduct.api.types.Arguments.NoArguments","location":"tenant-api/viaduct.api.types/-arguments/-no-arguments/index.html","searchKeys":["NoArguments","object NoArguments : Arguments","viaduct.api.types.Arguments.NoArguments"]},{"name":"object NoSelections : SelectionSet<CompositeOutput.NotComposite> ","description":"viaduct.api.select.SelectionSet.NoSelections","location":"tenant-api/viaduct.api.select/-selection-set/-no-selections/index.html","searchKeys":["NoSelections","object NoSelections : SelectionSet<CompositeOutput.NotComposite> ","viaduct.api.select.SelectionSet.NoSelections"]},{"name":"object NotComposite : CompositeOutput","description":"viaduct.api.types.CompositeOutput.NotComposite","location":"tenant-api/viaduct.api.types/-composite-output/-not-composite/index.html","searchKeys":["NotComposite","object NotComposite : CompositeOutput","viaduct.api.types.CompositeOutput.NotComposite"]},{"name":"open class FieldError(val message: String, val extensions: Map<String, Any>? = null, cause: Throwable? = null) : Exception","description":"viaduct.api.exception.FieldError","location":"tenant-api/viaduct.api.exception/-field-error/index.html","searchKeys":["FieldError","open class FieldError(val message: String, val extensions: Map<String, Any>? = null, cause: Throwable? = null) : Exception","viaduct.api.exception.FieldError"]},{"name":"open override fun <U : CompositeOutput.NotComposite, R : CompositeOutput> selectionSetFor(field: CompositeField<U, R>): SelectionSet<R>","description":"viaduct.api.select.SelectionSet.NoSelections.selectionSetFor","location":"tenant-api/viaduct.api.select/-selection-set/-no-selections/selection-set-for.html","searchKeys":["selectionSetFor","open override fun <U : CompositeOutput.NotComposite, R : CompositeOutput> selectionSetFor(field: CompositeField<U, R>): SelectionSet<R>","viaduct.api.select.SelectionSet.NoSelections.selectionSetFor"]},{"name":"open override fun <U : CompositeOutput.NotComposite> contains(field: Field<U>): Boolean","description":"viaduct.api.select.SelectionSet.NoSelections.contains","location":"tenant-api/viaduct.api.select/-selection-set/-no-selections/contains.html","searchKeys":["contains","open override fun <U : CompositeOutput.NotComposite> contains(field: Field<U>): Boolean","viaduct.api.select.SelectionSet.NoSelections.contains"]},{"name":"open override fun <U : CompositeOutput.NotComposite> requestsType(type: Type<U>): Boolean","description":"viaduct.api.select.SelectionSet.NoSelections.requestsType","location":"tenant-api/viaduct.api.select/-selection-set/-no-selections/requests-type.html","searchKeys":["requestsType","open override fun <U : CompositeOutput.NotComposite> requestsType(type: Type<U>): Boolean","viaduct.api.select.SelectionSet.NoSelections.requestsType"]},{"name":"open override fun <U : CompositeOutput.NotComposite> selectionSetFor(type: Type<U>): SelectionSet<U>","description":"viaduct.api.select.SelectionSet.NoSelections.selectionSetFor","location":"tenant-api/viaduct.api.select/-selection-set/-no-selections/selection-set-for.html","searchKeys":["selectionSetFor","open override fun <U : CompositeOutput.NotComposite> selectionSetFor(type: Type<U>): SelectionSet<U>","viaduct.api.select.SelectionSet.NoSelections.selectionSetFor"]},{"name":"open override fun isEmpty(): Boolean","description":"viaduct.api.select.SelectionSet.NoSelections.isEmpty","location":"tenant-api/viaduct.api.select/-selection-set/-no-selections/is-empty.html","searchKeys":["isEmpty","open override fun isEmpty(): Boolean","viaduct.api.select.SelectionSet.NoSelections.isEmpty"]},{"name":"open override val cause: Throwable","description":"viaduct.api.ViaductTenantResolverException.cause","location":"tenant-api/viaduct.api/-viaduct-tenant-resolver-exception/cause.html","searchKeys":["cause","open override val cause: Throwable","viaduct.api.ViaductTenantResolverException.cause"]},{"name":"open override val message: String","description":"viaduct.api.exception.FieldError.message","location":"tenant-api/viaduct.api.exception/-field-error/message.html","searchKeys":["message","open override val message: String","viaduct.api.exception.FieldError.message"]},{"name":"open override val type: Type<CompositeOutput.NotComposite>","description":"viaduct.api.select.SelectionSet.NoSelections.type","location":"tenant-api/viaduct.api.select/-selection-set/-no-selections/type.html","searchKeys":["type","open override val type: Type<CompositeOutput.NotComposite>","viaduct.api.select.SelectionSet.NoSelections.type"]},{"name":"open val packageName: String","description":"viaduct.api.TenantModule.packageName","location":"tenant-api/viaduct.api/-tenant-module/package-name.html","searchKeys":["packageName","open val packageName: String","viaduct.api.TenantModule.packageName"]},{"name":"sealed interface FieldValue<out T>","description":"viaduct.api.FieldValue","location":"tenant-api/viaduct.api/-field-value/index.html","searchKeys":["FieldValue","sealed interface FieldValue<out T>","viaduct.api.FieldValue"]},{"name":"suspend fun wrapResolveException(resolverId: String, resolveFn: suspend () -> Any?): Any?","description":"viaduct.api.wrapResolveException","location":"tenant-api/viaduct.api/wrap-resolve-exception.html","searchKeys":["wrapResolveException","suspend fun wrapResolveException(resolverId: String, resolveFn: suspend () -> Any?): Any?","viaduct.api.wrapResolveException"]},{"name":"val extensions: Map<String, Any>? = null","description":"viaduct.api.exception.FieldError.extensions","location":"tenant-api/viaduct.api.exception/-field-error/extensions.html","searchKeys":["extensions","val extensions: Map<String, Any>? = null","viaduct.api.exception.FieldError.extensions"]},{"name":"val fromArgument: String","description":"viaduct.api.Variable.fromArgument","location":"tenant-api/viaduct.api/-variable/from-argument.html","searchKeys":["fromArgument","val fromArgument: String","viaduct.api.Variable.fromArgument"]},{"name":"val fromObjectField: String","description":"viaduct.api.Variable.fromObjectField","location":"tenant-api/viaduct.api/-variable/from-object-field.html","searchKeys":["fromObjectField","val fromObjectField: String","viaduct.api.Variable.fromObjectField"]},{"name":"val fromQueryField: String","description":"viaduct.api.Variable.fromQueryField","location":"tenant-api/viaduct.api/-variable/from-query-field.html","searchKeys":["fromQueryField","val fromQueryField: String","viaduct.api.Variable.fromQueryField"]},{"name":"val name: String","description":"viaduct.api.Variable.name","location":"tenant-api/viaduct.api/-variable/name.html","searchKeys":["name","val name: String","viaduct.api.Variable.name"]},{"name":"val objectValueFragment: String","description":"viaduct.api.Resolver.objectValueFragment","location":"tenant-api/viaduct.api/-resolver/object-value-fragment.html","searchKeys":["objectValueFragment","val objectValueFragment: String","viaduct.api.Resolver.objectValueFragment"]},{"name":"val queryValueFragment: String","description":"viaduct.api.Resolver.queryValueFragment","location":"tenant-api/viaduct.api/-resolver/query-value-fragment.html","searchKeys":["queryValueFragment","val queryValueFragment: String","viaduct.api.Resolver.queryValueFragment"]},{"name":"val resolver: String","description":"viaduct.api.ViaductTenantResolverException.resolver","location":"tenant-api/viaduct.api/-viaduct-tenant-resolver-exception/resolver.html","searchKeys":["resolver","val resolver: String","viaduct.api.ViaductTenantResolverException.resolver"]},{"name":"val resolversCallChain: String","description":"viaduct.api.ViaductTenantResolverException.resolversCallChain","location":"tenant-api/viaduct.api/-viaduct-tenant-resolver-exception/resolvers-call-chain.html","searchKeys":["resolversCallChain","val resolversCallChain: String","viaduct.api.ViaductTenantResolverException.resolversCallChain"]},{"name":"val types: String","description":"viaduct.api.Variables.types","location":"tenant-api/viaduct.api/-variables/types.html","searchKeys":["types","val types: String","viaduct.api.Variables.types"]},{"name":"val variables: Array<Variable>","description":"viaduct.api.Resolver.variables","location":"tenant-api/viaduct.api/-resolver/variables.html","searchKeys":["variables","val variables: Array<Variable>","viaduct.api.Resolver.variables"]}]