<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Resolvers on Viaduct</title>
    <link>http://localhost:59480/airbnb/viaduct-public/docs/queries/resolvers/</link>
    <description>Recent content in Resolvers on Viaduct</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:59480/airbnb/viaduct-public/docs/queries/resolvers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Field Resolvers</title>
      <link>http://localhost:59480/airbnb/viaduct-public/docs/queries/resolvers/field_resolvers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:59480/airbnb/viaduct-public/docs/queries/resolvers/field_resolvers/</guid>
      <description>&lt;p&gt;Let’s look at the resolver for &lt;code&gt;User.displayName&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0550ae&#34;&gt;@Resolver&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#0a3069&#34;&gt;&amp;#34;fragment _ on User { firstName lastName }&amp;#34;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;)&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;UserDisplayNameResolver&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;UserResolvers&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;DisplayName&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cf222e&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;suspend&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#6639ba&#34;&gt;resolve&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;(&lt;/span&gt;ctx&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; Context&lt;span style=&#34;color:#1f2328&#34;&gt;):&lt;/span&gt; String&lt;span style=&#34;color:#1f2328&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cf222e&#34;&gt;var&lt;/span&gt; fn &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; ctx&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;objectValue&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;getFirstName&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cf222e&#34;&gt;var&lt;/span&gt; ln &lt;span style=&#34;color:#1f2328&#34;&gt;=&lt;/span&gt; ctx&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;objectValue&lt;span style=&#34;color:#1f2328&#34;&gt;.&lt;/span&gt;getLastName&lt;span style=&#34;color:#1f2328&#34;&gt;()&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#cf222e&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;when&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            fn &lt;span style=&#34;color:#0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; ln &lt;span style=&#34;color:#0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            fn &lt;span style=&#34;color:#0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;-&amp;gt;&lt;/span&gt; ln  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ln &lt;span style=&#34;color:#0550ae&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#cf222e&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;-&amp;gt;&lt;/span&gt; fn  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#cf222e&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#0550ae&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f6f8fa;background-color:#82071e&#34;&gt;“$&lt;/span&gt;fn &lt;span style=&#34;color:#f6f8fa;background-color:#82071e&#34;&gt;$&lt;/span&gt;ln&lt;span style=&#34;color:#f6f8fa;background-color:#82071e&#34;&gt;”&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As this example illustrates, in case of field resolvers, the &lt;code&gt;@Resolver&lt;/code&gt; annotation can contain an optional fragment on the type that contains the field being resolved.  We call this fragment the &lt;em&gt;required selection set&lt;/em&gt; of the resolver.  In this case, required selection set  asks for the &lt;code&gt;firstName&lt;/code&gt; and &lt;code&gt;lastName&lt;/code&gt; fields of &lt;code&gt;User&lt;/code&gt;, which are combined to generate the display name of the user.  If a resolver attempts to access a field that’s not in its required selection set, an &lt;code&gt;UnsetSelectionException&lt;/code&gt; is thrown at runtime.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Node Resolvers</title>
      <link>http://localhost:59480/airbnb/viaduct-public/docs/queries/resolvers/node_resolvers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:59480/airbnb/viaduct-public/docs/queries/resolvers/node_resolvers/</guid>
      <description>&lt;p&gt;When implementing a node resolver you have access to a &lt;code&gt;NodeExecutionContext&lt;/code&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#cf222e&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#1f2328&#34;&gt;NodeExecutionContext&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; Node&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;:&lt;/span&gt; ExecutionContext &lt;span style=&#34;color:#1f2328&#34;&gt;{&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cf222e&#34;&gt;val&lt;/span&gt; id&lt;span style=&#34;color:#1f2328&#34;&gt;:&lt;/span&gt; GlobalID&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#cf222e&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#6639ba&#34;&gt;selections&lt;/span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;():&lt;/span&gt; SelectionSet&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#1f2328&#34;&gt;&amp;gt;&lt;/span&gt;  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#1f2328&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In addition to the functions provided by &lt;code&gt;ExecutionContext&lt;/code&gt;, &lt;code&gt;NodeExecutionContext&lt;/code&gt; gives access to the identifier of the node to be resolved, and to the selection-set being requested by the query.  Most node resolvers are not “selective,” i.e., they ignore this selection set and thus don’t call this function.  In this case, as discussed above, it’s important that the node resolver returns its entire responsibility set.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
