"""
An individual person or character within the Star Wars universe.
"""
type Character implements Node @resolver @scope(to: ["default"]) {
  """
  The GlobalID of this character - uniquely identifies this Character in the graph (internal use only)
  """
  id: ID!

  """
  The name of this character.
  """
  name: String

  """
  The birth year of the character, using the in-universe standard of BBY or ABY -
  Before the Battle of Yavin or After the Battle of Yavin. The Battle of Yavin is
  a battle that occurs at the end of Star Wars episode IV: A New Hope.
  """
  birthYear: String

  """
  The eye color of this character. Will be "unknown" if not known or "n/a" if the
  character does not have an eye.
  """
  eyeColor: String

  """
  The gender of this character. Either "Male", "Female" or "unknown",
  "n/a" if the character does not have a gender.
  """
  gender: String

  """
  The hair color of this character. Will be "unknown" if not known or "n/a" if the
  character does not have hair.
  """
  hairColor: String

  """
  The height of the character in centimeters.
  """
  height: Int

  """
  The mass of the character in kilograms.
  """
  mass: Float

  """
  The ISO 8601 date format of the time that this resource was created.
  """
  created: String

  """
  The ISO 8601 date format of the time that this resource was edited.
  """
  edited: String

  """
  A planet that this character was born on or inhabits.
  """
  homeworld: Planet @resolver

  """
  The films that this character has been in.
  """
  filmConnection(first: Int, after: String, last: Int, before: String): CharacterFilmsConnection
    @backingData(class: "starwars.character.FilmConnection")

  """
  The species that this character belongs to, or null if unknown.
  """
  species: Species @resolver

  """
  The starships that this character has piloted, or an empty list if none.
  """
  starshipConnection(first: Int, after: String, last: Int, before: String): CharacterStarshipsConnection
    @backingData(class: "starwars.character.StarshipConnection")

  """
  The vehicles that this character has piloted, or an empty list if none.
  """
  vehicleConnection(first: Int, after: String, last: Int, before: String): CharacterVehiclesConnection
    @backingData(class: "starwars.character.VehicleConnection")

  """
  Display name for the character (demonstrates shorthand fragment syntax)
  """
  displayName: String @resolver

  """
  Summary of character with name and birth year (demonstrates full fragment syntax)
  """
  displaySummary: String @resolver

  """
  Description of character's appearance (demonstrates full fragment syntax with multiple fields)
  """
  appearanceDescription: String @resolver

  """
  Number of films this character appears in (batch resolver example)
  """
  filmCount: Int @resolver

  """
  Rich summary combining character data with relationships (batch resolver example)
  """
  richSummary: String @resolver

  """
  Character profile with conditional information based on includeDetails argument (demonstrates @Variable with fromArgument)
  """
  characterProfile(includeDetails: Boolean! = false): String @resolver

  """
  Character stats summary with age range filtering (demonstrates VariableProvider with dynamic values)
  """
  characterStats(minAge: Int, maxAge: Int): String @resolver

  """
  Formatted character description using field variables (demonstrates @Variable with fromField)
  """
  formattedDescription(format: String = "default"): String @resolver
}

"""
A connection to a list of items.
"""
type CharacterFilmsConnection @scope(to: ["default"]) {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [CharacterFilmsEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection.
  """
  films: [Film]
}

"""
An edge in a connection.
"""
type CharacterFilmsEdge @scope(to: ["default"]) {
  """
  The item at the end of the edge
  """
  node: Film

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
A connection to a list of items.
"""
type CharacterStarshipsConnection @scope(to: ["default"]) {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [CharacterStarshipsEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection.
  """
  starships: [Starship]
}

"""
An edge in a connection.
"""
type CharacterStarshipsEdge @scope(to: ["default"]) {
  """
  The item at the end of the edge
  """
  node: Starship

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
A connection to a list of items.
"""
type CharacterVehiclesConnection @scope(to: ["default"]) {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [CharacterVehiclesEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection.
  """
  vehicles: [Vehicle]
}

"""
An edge in a connection.
"""
type CharacterVehiclesEdge @scope(to: ["default"]) {
  """
  The item at the end of the edge
  """
  node: Vehicle

  """
  A cursor for use in pagination
  """
  cursor: String!
}
