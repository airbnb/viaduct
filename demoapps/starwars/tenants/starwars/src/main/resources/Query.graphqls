"""
Search input demonstrating @oneOf directive for exactly-one-field semantics
"""
input CharacterSearchInput @oneOf @scope(to: ["default"]) {
  """
  Search by character name
  """
  byName: String
  """
  Search by character ID
  """
  byId: ID @idOf(type: "Character")
  """
  Search by birth year
  """
  byBirthYear: String
}

"""
The root query object
"""
type Query @scope(to: ["default"]) {
  """
  Search for a character using exactly one search criteria
  """
  searchCharacter(
    """
    Search input - exactly one field must be provided
    """
    search: CharacterSearchInput!
  ): Character @resolver

  """
  All films
  """
  allFilms(first: Int, after: String, last: Int, before: String): FilmsConnection
    @resolver
    @backingData(class: "viaduct.demoapp.starwars.resolvers.AllFilmsResolver")

  """
  All characters
  """
  allCharacters(first: Int, after: String, last: Int, before: String): CharactersConnection
    @resolver
    @backingData(class: "viaduct.demoapp.starwars.resolvers.AllCharactersResolver")

  """
  All planets
  """
  allPlanets(first: Int, after: String, last: Int, before: String): PlanetsConnection
    @resolver
    @backingData(class: "viaduct.demoapp.starwars.resolvers.AllPlanetsResolver")

  """
  All species
  """
  allSpecies(first: Int, after: String, last: Int, before: String): SpeciesConnection
    @resolver
    @backingData(class: "viaduct.demoapp.starwars.resolvers.AllSpeciesResolver")

  """
  All starships
  """
  allStarships(first: Int, after: String, last: Int, before: String): StarshipsConnection
    @resolver
    @backingData(class: "viaduct.demoapp.starwars.resolvers.AllStarshipsResolver")

  """
  All vehicles
  """
  allVehicles(first: Int, after: String, last: Int, before: String): VehiclesConnection
    @resolver
    @backingData(class: "viaduct.demoapp.starwars.resolvers.AllVehiclesResolver")

  """
  A specific film
  """
  film(id: ID! @idOf(type: "Film")): Film @resolver

  """
  A specific character
  """
  character(id: ID! @idOf(type: "Character")): Character @resolver

  """
  A specific planet
  """
  planet(id: ID! @idOf(type: "Planet")): Planet @resolver

  """
  A specific species
  """
  species(id: ID! @idOf(type: "Species")): Species @resolver

  """
  A specific starship
  """
  starship(id: ID! @idOf(type: "Starship")): Starship @resolver

  """
  A specific vehicle
  """
  vehicle(id: ID! @idOf(type: "Vehicle")): Vehicle @resolver
}

"""
A connection to a list of items.
"""
type FilmsConnection @scope(to: ["default"]) {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [FilmsEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection.
  """
  films: [Film]
}

"""
An edge in a connection.
"""
type FilmsEdge @scope(to: ["default"]) {
  """
  The item at the end of the edge
  """
  node: Film

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
A connection to a list of items.
"""
type CharactersConnection @scope(to: ["default"]) {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [CharactersEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection.
  """
  characters: [Character]
}

"""
An edge in a connection.
"""
type CharactersEdge @scope(to: ["default"]) {
  """
  The item at the end of the edge
  """
  node: Character

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
A connection to a list of items.
"""
type PlanetsConnection @scope(to: ["default"]) {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [PlanetsEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection.
  """
  planets: [Planet]
}

"""
An edge in a connection.
"""
type PlanetsEdge @scope(to: ["default"]) {
  """
  The item at the end of the edge
  """
  node: Planet

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
A connection to a list of items.
"""
type SpeciesConnection @scope(to: ["default"]) {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [SpeciesEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection.
  """
  species: [Species]
}

"""
An edge in a connection.
"""
type SpeciesEdge @scope(to: ["default"]) {
  """
  The item at the end of the edge
  """
  node: Species

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
A connection to a list of items.
"""
type StarshipsConnection @scope(to: ["default"]) {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [StarshipsEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection.
  """
  starships: [Starship]
}

"""
An edge in a connection.
"""
type StarshipsEdge @scope(to: ["default"]) {
  """
  The item at the end of the edge
  """
  node: Starship

  """
  A cursor for use in pagination
  """
  cursor: String!
}

"""
A connection to a list of items.
"""
type VehiclesConnection @scope(to: ["default"]) {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [VehiclesEdge]

  """
  A count of the total number of objects in this connection, ignoring pagination.
  """
  totalCount: Int

  """
  A list of all of the objects returned in the connection.
  """
  vehicles: [Vehicle]
}

"""
An edge in a connection.
"""
type VehiclesEdge @scope(to: ["default"]) {
  """
  The item at the end of the edge
  """
  node: Vehicle

  """
  A cursor for use in pagination
  """
  cursor: String!
}
