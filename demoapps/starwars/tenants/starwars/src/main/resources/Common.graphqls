"""
Information about pagination in a connection.
"""
type PageInfo @scope(to: ["publicScope"]) {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

"""
A large mass, planet or planetoid in the Star Wars Universe, at the time of
0 ABY.
"""
type Planet @resolver @scope(to: ["publicScope"]) {
  """
  The ID of an object
  """
  id: String! @resolver

  """
  The name of this planet.
  """
  name: String

  """
  The diameter of this planet in kilometers.
  """
  diameter: Int

  """
  The number of standard hours it takes for this planet to complete a single
  rotation on its axis.
  """
  rotationPeriod: Int

  """
  The number of standard days it takes for this planet to complete a single orbit
  of its local star.
  """
  orbitalPeriod: Int

  """
  A number denoting the gravity of this planet, where "1" is normal or 1 standard
  G. "2" is twice or 2 standard Gs. "0.5" is half or 0.5 standard Gs.
  """
  gravity: Float

  """
  The average population of sentient beings inhabiting this planet.
  """
  population: Float

  """
  The climates of this planet.
  """
  climates: [String]

  """
  The terrains of this planet.
  """
  terrains: [String]

  """
  The percentage of the planet surface that is naturally occurring water or bodies
  of water.
  """
  surfaceWater: Float

  """
  The ISO 8601 date format of the time that this resource was created.
  """
  created: String

  """
  The ISO 8601 date format of the time that this resource was edited.
  """
  edited: String

  """
  The residents of this planet.
  """
  residentConnection(first: Int, after: String, last: Int, before: String): PlanetResidentsConnection
    @backingData(class: "starwars.planet.ResidentConnection")

  """
  The films that this planet has appeared in.
  """
  filmConnection(first: Int, after: String, last: Int, before: String): PlanetFilmsConnection
    @backingData(class: "starwars.planet.FilmConnection")
}

"""
A type of person or character within the Star Wars Universe.
"""
type Species @resolver @scope(to: ["publicScope"]) {
  """
  The ID of an object
  """
  id: String! @resolver

  """
  The name of this species.
  """
  name: String

  """
  The classification of this species, such as "mammal" or "reptile".
  """
  classification: String

  """
  The designation of this species, such as "sentient".
  """
  designation: String

  """
  The average height of this species in centimeters.
  """
  averageHeight: Float

  """
  The average lifespan of this species in years.
  """
  averageLifespan: Int

  """
  The common eye colors for this species, empty if this species does not typically
  have eyes.
  """
  eyeColors: [String]

  """
  The common hair colors for this species, empty if this species does not
  typically have hair.
  """
  hairColors: [String]

  """
  The common skin colors for this species, empty if this species does not
  typically have skin.
  """
  skinColors: [String]

  """
  The language commonly spoken by this species.
  """
  language: String

  """
  A planet that this species originates from.
  """
  homeworld: Planet

  """
  The people that are a part of this species.
  """
  personConnection(first: Int, after: String, last: Int, before: String): SpeciesPeopleConnection
    @backingData(class: "starwars.species.PersonConnection")

  """
  The films that this species has appeared in.
  """
  filmConnection(first: Int, after: String, last: Int, before: String): SpeciesFilmsConnection
    @backingData(class: "starwars.species.FilmConnection")

  """
  The ISO 8601 date format of the time that this resource was created.
  """
  created: String

  """
  The ISO 8601 date format of the time that this resource was edited.
  """
  edited: String
}

"""
A single transport craft that does not have hyperdrive capability
"""
type Vehicle @resolver @scope(to: ["publicScope"]) {
  """
  The ID of an object
  """
  id: String! @resolver

  """
  The name of this vehicle. The common name, such as "Sand Crawler" or "Speeder
  bike".
  """
  name: String

  """
  The model or official name of this vehicle. Such as "All-Terrain Attack
  Transport".
  """
  model: String

  """
  The class of this vehicle, such as "Wheeled" or "Repulsorcraft".
  """
  vehicleClass: String

  """
  The manufacturers of this vehicle.
  """
  manufacturers: [String]

  """
  The cost of this vehicle new, in Galactic Credits.
  """
  costInCredits: Float

  """
  The length of this vehicle in meters.
  """
  length: Float

  """
  The number of personnel needed to run or pilot this vehicle.
  """
  crew: String

  """
  The number of non-essential people this vehicle can transport.
  """
  passengers: String

  """
  The maximum speed of this vehicle in the atmosphere.
  """
  maxAtmospheringSpeed: Int

  """
  The maximum number of kilograms that this vehicle can transport.
  """
  cargoCapacity: Float

  """
  The maximum length of time that this vehicle can provide consumables for its
  entire crew without having to resupply.
  """
  consumables: String

  """
  The films that this vehicle has appeared in.
  """
  filmConnection(first: Int, after: String, last: Int, before: String): VehicleFilmsConnection
    @backingData(class: "starwars.vehicle.FilmConnection")

  """
  The pilots that have piloted this vehicle.
  """
  pilotConnection(first: Int, after: String, last: Int, before: String): VehiclePilotsConnection
    @backingData(class: "starwars.vehicle.PilotConnection")

  """
  The ISO 8601 date format of the time that this resource was created.
  """
  created: String

  """
  The ISO 8601 date format of the time that this resource was edited.
  """
  edited: String
}

"""
Connection types for relationships
"""
type PlanetResidentsConnection @scope(to: ["publicScope"]) {
  pageInfo: PageInfo!
  edges: [PlanetResidentsEdge]
  totalCount: Int
  residents: [Person]
}

type PlanetResidentsEdge @scope(to: ["publicScope"]) {
  node: Person
  cursor: String!
}

type PlanetFilmsConnection @scope(to: ["publicScope"]) {
  pageInfo: PageInfo!
  edges: [PlanetFilmsEdge]
  totalCount: Int
  films: [Film]
}

type PlanetFilmsEdge @scope(to: ["publicScope"]) {
  node: Film
  cursor: String!
}

type SpeciesPeopleConnection @scope(to: ["publicScope"]) {
  pageInfo: PageInfo!
  edges: [SpeciesPeopleEdge]
  totalCount: Int
  people: [Person]
}

type SpeciesPeopleEdge @scope(to: ["publicScope"]) {
  node: Person
  cursor: String!
}

type SpeciesFilmsConnection @scope(to: ["publicScope"]) {
  pageInfo: PageInfo!
  edges: [SpeciesFilmsEdge]
  totalCount: Int
  films: [Film]
}

type SpeciesFilmsEdge @scope(to: ["publicScope"]) {
  node: Film
  cursor: String!
}

type VehicleFilmsConnection @scope(to: ["publicScope"]) {
  pageInfo: PageInfo!
  edges: [VehicleFilmsEdge]
  totalCount: Int
  films: [Film]
}

type VehicleFilmsEdge @scope(to: ["publicScope"]) {
  node: Film
  cursor: String!
}

type VehiclePilotsConnection @scope(to: ["publicScope"]) {
  pageInfo: PageInfo!
  edges: [VehiclePilotsEdge]
  totalCount: Int
  pilots: [Person]
}

type VehiclePilotsEdge @scope(to: ["publicScope"]) {
  node: Person
  cursor: String!
}
