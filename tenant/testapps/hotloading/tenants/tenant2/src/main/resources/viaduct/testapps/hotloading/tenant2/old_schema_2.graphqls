extend type Query @scope(to: ["publicScope"]) {
  objField: Object3 @resolver
  objField2: Object4 @resolver
  objField3: Object5 @resolver
  pets: [Pet] @resolver
}

type Object3 @scope(to: ["publicScope"]) {
  field1: String
  field2: String @resolver
  field3: String
}

type Object4 @scope(to: ["publicScope"]) {
  field1: String
  field2: String @resolver
}

type Object5 @scope(to: ["publicScope"]) {
  field1: String @resolver
  field2(enumInput: SomeEnum): String @resolver
  enumField: SomeEnum
}

extend type Query @scope(to: ["publicScope"]) {
  scopedStrField: String @resolver
}

enum SomeEnum @scope(to: ["publicScope"]) {
  VALUE1
}

union Pet @scope(to: ["publicScope"]) = Cat

type Cat @scope(to: ["publicScope"]) {
  name: String!
  meow: String!
}

type Dog @scope(to: ["publicScope"]) {
  name: String!
  bark: String!
}
