name: Build and Test (Gradle)

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GRADLE_OPTS_EXTRA: "-Dorg.gradle.parallel=false -Dorg.gradle.caching=true -Dorg.gradle.daemon=false"
      GRADLE_SCAN: "false"
    steps:
      - uses: actions/checkout@v4

      - name: Verify Gradle wrapper
        run: |
          if [ ! -f "./gradlew" ]; then
            echo "‚ùå gradlew not found"
            exit 1
          fi
          chmod +x ./gradlew
          echo "‚úÖ Gradle wrapper ready"

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            .gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('**/gradle-wrapper.properties', '**/libs.versions.toml', '**/build.gradle.kts') }}

      - name: Set gradlew permissions
        if: false
        run: chmod +x ./gradlew

      - name: Download dependencies
        run: |
          echo "üì• Downloading Gradle dependencies..."
          ./gradlew dependencies --no-scan || {
            echo "‚ùå Failed to download dependencies"
            exit 1
          }
          echo "‚úÖ Dependencies downloaded successfully"

      - name: Build project (without tests)
        run: |
          echo "üî® Building project..."
          ./gradlew clean --no-scan || { echo "‚ùå Clean failed"; exit 1; }
          ./gradlew assemble --no-scan || { echo "‚ùå Assemble failed"; exit 1; }
          echo "‚úÖ Project built successfully"

      - name: Collect build artifacts
        run: |
          echo "üì¶ Collecting artifacts..."
          mkdir -p build/package/{primary,sources,javadoc,others}
          find . -type f -path "*/build/libs/*.jar" ! -name "*-sources.jar" ! -name "*-javadoc.jar" -exec cp {} build/package/primary/ \;
          find . -type f -path "*/build/libs/*-sources.jar" -exec cp {} build/package/sources/ \;
          find . -type f -path "*/build/libs/*-javadoc.jar" -exec cp {} build/package/javadoc/ \;
          find . -type f -path "*/build/publications/*/*.pom" -exec cp {} build/package/others/ \;
          echo "‚úÖ Artifacts collected:"
          find build/package -type f -maxdepth 2 -print

      - uses: actions/upload-artifact@v4
        with:
          name: build-package
          path: build/package/


          
